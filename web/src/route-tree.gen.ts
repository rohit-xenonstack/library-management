/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SignInImport } from './routes/sign-in'
import { Route as IndexImport } from './routes/index'
import { Route as ownerOnboardAdminImport } from './routes/(owner)/onboard-admin'
import { Route as ownerCreateLibraryImport } from './routes/(owner)/create-library'
import { Route as adminIssueRequestsImport } from './routes/(admin)/issue-requests'
import { Route as adminAddBookImport } from './routes/(admin)/add-book'
import { Route as readerRegisterLibIDImport } from './routes/(reader)/register.$libID'
import { Route as adminIsbnUpdateImport } from './routes/(admin)/$isbn.update'

// Create/Update Routes

const SignInRoute = SignInImport.update({
  path: '/sign-in',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ownerOnboardAdminRoute = ownerOnboardAdminImport.update({
  path: '/onboard-admin',
  getParentRoute: () => rootRoute,
} as any)

const ownerCreateLibraryRoute = ownerCreateLibraryImport.update({
  path: '/create-library',
  getParentRoute: () => rootRoute,
} as any)

const adminIssueRequestsRoute = adminIssueRequestsImport.update({
  path: '/issue-requests',
  getParentRoute: () => rootRoute,
} as any)

const adminAddBookRoute = adminAddBookImport.update({
  path: '/add-book',
  getParentRoute: () => rootRoute,
} as any)

const readerRegisterLibIDRoute = readerRegisterLibIDImport.update({
  path: '/register/$libID',
  getParentRoute: () => rootRoute,
} as any)

const adminIsbnUpdateRoute = adminIsbnUpdateImport.update({
  path: '/$isbn/update',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/sign-in': {
      id: '/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof SignInImport
      parentRoute: typeof rootRoute
    }
    '/(admin)/add-book': {
      id: '/add-book'
      path: '/add-book'
      fullPath: '/add-book'
      preLoaderRoute: typeof adminAddBookImport
      parentRoute: typeof rootRoute
    }
    '/(admin)/issue-requests': {
      id: '/issue-requests'
      path: '/issue-requests'
      fullPath: '/issue-requests'
      preLoaderRoute: typeof adminIssueRequestsImport
      parentRoute: typeof rootRoute
    }
    '/(owner)/create-library': {
      id: '/create-library'
      path: '/create-library'
      fullPath: '/create-library'
      preLoaderRoute: typeof ownerCreateLibraryImport
      parentRoute: typeof rootRoute
    }
    '/(owner)/onboard-admin': {
      id: '/onboard-admin'
      path: '/onboard-admin'
      fullPath: '/onboard-admin'
      preLoaderRoute: typeof ownerOnboardAdminImport
      parentRoute: typeof rootRoute
    }
    '/(admin)/$isbn/update': {
      id: '/$isbn/update'
      path: '/$isbn/update'
      fullPath: '/$isbn/update'
      preLoaderRoute: typeof adminIsbnUpdateImport
      parentRoute: typeof rootRoute
    }
    '/(reader)/register/$libID': {
      id: '/register/$libID'
      path: '/register/$libID'
      fullPath: '/register/$libID'
      preLoaderRoute: typeof readerRegisterLibIDImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/sign-in': typeof SignInRoute
  '/add-book': typeof adminAddBookRoute
  '/issue-requests': typeof adminIssueRequestsRoute
  '/create-library': typeof ownerCreateLibraryRoute
  '/onboard-admin': typeof ownerOnboardAdminRoute
  '/$isbn/update': typeof adminIsbnUpdateRoute
  '/register/$libID': typeof readerRegisterLibIDRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/sign-in': typeof SignInRoute
  '/add-book': typeof adminAddBookRoute
  '/issue-requests': typeof adminIssueRequestsRoute
  '/create-library': typeof ownerCreateLibraryRoute
  '/onboard-admin': typeof ownerOnboardAdminRoute
  '/$isbn/update': typeof adminIsbnUpdateRoute
  '/register/$libID': typeof readerRegisterLibIDRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/sign-in': typeof SignInRoute
  '/add-book': typeof adminAddBookRoute
  '/issue-requests': typeof adminIssueRequestsRoute
  '/create-library': typeof ownerCreateLibraryRoute
  '/onboard-admin': typeof ownerOnboardAdminRoute
  '/$isbn/update': typeof adminIsbnUpdateRoute
  '/register/$libID': typeof readerRegisterLibIDRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/sign-in'
    | '/add-book'
    | '/issue-requests'
    | '/create-library'
    | '/onboard-admin'
    | '/$isbn/update'
    | '/register/$libID'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/sign-in'
    | '/add-book'
    | '/issue-requests'
    | '/create-library'
    | '/onboard-admin'
    | '/$isbn/update'
    | '/register/$libID'
  id:
    | '__root__'
    | '/'
    | '/sign-in'
    | '/add-book'
    | '/issue-requests'
    | '/create-library'
    | '/onboard-admin'
    | '/$isbn/update'
    | '/register/$libID'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  SignInRoute: typeof SignInRoute
  adminAddBookRoute: typeof adminAddBookRoute
  adminIssueRequestsRoute: typeof adminIssueRequestsRoute
  ownerCreateLibraryRoute: typeof ownerCreateLibraryRoute
  ownerOnboardAdminRoute: typeof ownerOnboardAdminRoute
  adminIsbnUpdateRoute: typeof adminIsbnUpdateRoute
  readerRegisterLibIDRoute: typeof readerRegisterLibIDRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  SignInRoute: SignInRoute,
  adminAddBookRoute: adminAddBookRoute,
  adminIssueRequestsRoute: adminIssueRequestsRoute,
  ownerCreateLibraryRoute: ownerCreateLibraryRoute,
  ownerOnboardAdminRoute: ownerOnboardAdminRoute,
  adminIsbnUpdateRoute: adminIsbnUpdateRoute,
  readerRegisterLibIDRoute: readerRegisterLibIDRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/sign-in",
        "/add-book",
        "/issue-requests",
        "/create-library",
        "/onboard-admin",
        "/$isbn/update",
        "/register/$libID"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/sign-in": {
      "filePath": "sign-in.tsx"
    },
    "/add-book": {
      "filePath": "(admin)/add-book.tsx"
    },
    "/issue-requests": {
      "filePath": "(admin)/issue-requests.tsx"
    },
    "/create-library": {
      "filePath": "(owner)/create-library.tsx"
    },
    "/onboard-admin": {
      "filePath": "(owner)/onboard-admin.tsx"
    },
    "/$isbn/update": {
      "filePath": "(admin)/$isbn.update.tsx"
    },
    "/register/$libID": {
      "filePath": "(reader)/register.$libID.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
